{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table__head\"\n}, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Дата\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Название\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Количество\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Расстояние\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"table__body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_row_component = _resolveComponent(\"row-component\");\n\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rows, row => {\n    return _openBlock(), _createBlock(_component_row_component, {\n      row: row,\n      key: row.id\n    }, null, 8\n    /* PROPS */\n    , [\"row\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EACWA,KAAK,EAAC;;;gCACTC,oBAKQ,OALR,EAKQ;EALDD,KAAK,EAAC;AAKL,CALR,EAA0B,cACtBC,oBAAyB,IAAzB,EAAyB;EAArBC,KAAK,EAAC;AAAe,CAAzB,EAAgB,MAAhB,CADsB,eAEtBD,oBAA6B,IAA7B,EAA6B;EAAzBC,KAAK,EAAC;AAAmB,CAA7B,EAAgB,UAAhB,CAFsB,eAGtBD,oBAA+B,IAA/B,EAA+B;EAA3BC,KAAK,EAAC;AAAqB,CAA/B,EAAgB,YAAhB,CAHsB,eAItBD,oBAA+B,IAA/B,EAA+B;EAA3BC,KAAK,EAAC;AAAqB,CAA/B,EAAgB,YAAhB,CAJsB,CAA1B;;AAAA;;;EAMOF,KAAK,EAAC;;;;;uBAPjBG,oBAaQ,OAbR,cAaQ,CAZJC,UAYI,EANJH,oBAKQ,OALR,cAKQ,oBAJJE,oBAGEE,SAHF,EAGE,IAHF,EAGEC,YAH2BC,UAG3B,EAHoBC,GAAW,IAAR;yBAAzBC,aAGEC,wBAHF,EAGE;MAFGF,GAAG,EAAEA,GAER;MADGG,GAAG,EAAEH,GAAG,CAACI;IACZ,CAHF;;IAAA;GAGE,CAHF;;EAAA,CAII,EALR,CAMI,CAbR","names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_2","_Fragment","_renderList","$data","row","_createBlock","_component_row_component","key","id"],"sourceRoot":"","sources":["C:\\Users\\Лидия\\Desktop\\Frontend\\fullstack-practice\\client\\src\\components\\TableComponent.vue"],"sourcesContent":["<template>\r\n    <table class=\"table\">\r\n        <thead class=\"table__head\">\r\n            <th scope=\"col\">Дата</th>\r\n            <th scope=\"col\">Название</th>\r\n            <th scope=\"col\">Количество</th>\r\n            <th scope=\"col\">Расстояние</th>\r\n        </thead>\r\n        <tbody class=\"table__body\">\r\n            <row-component v-for=\"row in rows\"\r\n                :row=\"row\"\r\n                :key=\"row.id\"\r\n            />\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    import RowComponent from './RowComponent.vue'\r\n\r\n    export default {\r\n        components: {\r\n            RowComponent\r\n        },\r\n        data() {\r\n            return {\r\n                rows: []\r\n            }\r\n        },\r\n        methods: {\r\n            async fetchTable() {\r\n                const $host = axios.create({\r\n                    baseURL: process.env.VUE_APP_API_URL\r\n                })\r\n                const {data} = await $host.get('api/table')\r\n                this.rows = data\r\n            }\r\n        },\r\n        mounted() {\r\n            this.fetchTable()\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}