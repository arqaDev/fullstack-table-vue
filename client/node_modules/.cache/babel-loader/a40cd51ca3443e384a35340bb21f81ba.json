{"ast":null,"code":"import axios from 'axios';\nimport TableComponent from './components/TableComponent.vue';\nimport ModalComponent from './components/UI/ModalComponent.vue';\nimport SearchAndSort from './components/UI/SearchAndSort.vue';\nexport default {\n  name: 'App',\n  components: {\n    TableComponent,\n    ModalComponent,\n    SearchAndSort\n  },\n\n  data() {\n    return {\n      rows: [],\n      isShowen: false,\n      selectedSort: '',\n      searchTerm: ''\n    };\n  },\n\n  methods: {\n    async addRow(title, quantity, distance) {\n      const $host = axios.create({\n        baseURL: process.env.VUE_APP_API_URL\n      });\n      const data = await $host.post('api/table', {\n        title,\n        quantity,\n        distance\n      });\n      return data;\n    },\n\n    async fetchTable() {\n      const $host = axios.create({\n        baseURL: process.env.VUE_APP_API_URL\n      });\n      const {\n        data\n      } = await $host.get('api/table');\n      this.rows = this.sortedAndSearchedTodos(data);\n    },\n\n    sortTable(rows) {\n      if (this.selectedSort === 'title') {\n        return [...rows].sort((row1, row2) => row1[this.selectedSort].localeCompare(row2[this.selectedSort]));\n      } else if (this.selectedSort) {\n        return [...rows].sort((row1, row2) => row1[this.selectedSort] === row2[this.selectedSort] ? row1['title'].localeCompare(row2['title']) : row1[this.selectedSort] - row2[this.selectedSort]);\n      } else {\n        return rows;\n      }\n    },\n\n    sortedAndSearchedTodos(rows) {\n      return this.sortTable(rows).filter(row => row.title.toLowerCase().includes(this.searchTerm.toLowerCase()));\n    },\n\n    setSelectedSort(type) {\n      this.selectedSort = type;\n    },\n\n    showModal() {\n      this.isShowen = true;\n    }\n\n  },\n\n  mounted() {\n    this.fetchTable();\n  },\n\n  watch: {\n    selectedSort() {\n      this.fetchTable();\n    },\n\n    searchTerm() {\n      this.fetchTable();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoBE,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,eAAe;EACbC,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACVJ,cADU;IAEVC,cAFU;IAGVC;EAHU,CAFC;;EAObG,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,EADD;MAELC,QAAQ,EAAE,KAFL;MAGLC,YAAY,EAAE,EAHT;MAILC,UAAU,EAAE;IAJP,CAAP;EAMD,CAdY;;EAebC,OAAO,EAAE;IACP,MAAMC,MAAN,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyC;MACvC,MAAMC,KAAI,GAAIhB,KAAK,CAACiB,MAAN,CAAa;QACvBC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;MADE,CAAb,CAAd;MAGA,MAAMf,IAAG,GAAI,MAAMU,KAAK,CAACM,IAAN,CAAW,WAAX,EAAwB;QAACT,KAAD;QAAQC,QAAR;QAAkBC;MAAlB,CAAxB,CAAnB;MACA,OAAOT,IAAP;IACD,CAPM;;IAQP,MAAMiB,UAAN,GAAmB;MACjB,MAAMP,KAAI,GAAIhB,KAAK,CAACiB,MAAN,CAAa;QACvBC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;MADE,CAAb,CAAd;MAGA,MAAM;QAACf;MAAD,IAAS,MAAMU,KAAK,CAACQ,GAAN,CAAU,WAAV,CAArB;MACA,KAAKjB,IAAL,GAAY,KAAKkB,sBAAL,CAA4BnB,IAA5B,CAAZ;IACD,CAdM;;IAePoB,SAAS,CAACnB,IAAD,EAAO;MACd,IAAI,KAAKE,YAAL,KAAsB,OAA1B,EAAmC;QACjC,OAAO,CAAC,GAAGF,IAAJ,EAAUoB,IAAV,CAAe,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAAC,KAAKnB,YAAN,CAAJ,CAAwBqB,aAAxB,CAAsCD,IAAI,CAAC,KAAKpB,YAAN,CAA1C,CAA/B,CAAP;MACF,CAFA,MAEO,IAAI,KAAKA,YAAT,EAAuB;QAC5B,OAAO,CAAC,GAAGF,IAAJ,EAAUoB,IAAV,CAAe,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAAC,KAAKnB,YAAN,CAAJ,KAA4BoB,IAAI,CAAC,KAAKpB,YAAN,CAAhC,GAAsDmB,IAAI,CAAC,OAAD,CAAJ,CAAcE,aAAd,CAA4BD,IAAI,CAAC,OAAD,CAAhC,CAAtD,GAAmGD,IAAI,CAAC,KAAKnB,YAAN,CAAJ,GAA0BoB,IAAI,CAAC,KAAKpB,YAAN,CAAhK,CAAP;MACF,CAFO,MAEA;QACL,OAAOF,IAAP;MACF;IACD,CAvBM;;IAwBPkB,sBAAsB,CAAClB,IAAD,EAAO;MACzB,OAAO,KAAKmB,SAAL,CAAenB,IAAf,EAAqBwB,MAArB,CAA4BC,GAAE,IAAKA,GAAG,CAACnB,KAAJ,CAAUoB,WAAV,GAAwBC,QAAxB,CAAiC,KAAKxB,UAAL,CAAgBuB,WAAhB,EAAjC,CAAnC,CAAP;IACH,CA1BM;;IA2BPE,eAAe,CAACC,IAAD,EAAO;MACpB,KAAK3B,YAAL,GAAoB2B,IAApB;IACD,CA7BM;;IA8BPC,SAAS,GAAG;MACV,KAAK7B,QAAL,GAAgB,IAAhB;IACF;;EAhCO,CAfI;;EAiDb8B,OAAO,GAAG;IACR,KAAKf,UAAL;EACD,CAnDY;;EAoDbgB,KAAK,EAAE;IACL9B,YAAY,GAAG;MACb,KAAKc,UAAL;IACD,CAHI;;IAILb,UAAU,GAAG;MACX,KAAKa,UAAL;IACF;;EANK;AApDM,CAAf","names":["axios","TableComponent","ModalComponent","SearchAndSort","name","components","data","rows","isShowen","selectedSort","searchTerm","methods","addRow","title","quantity","distance","$host","create","baseURL","process","env","VUE_APP_API_URL","post","fetchTable","get","sortedAndSearchedTodos","sortTable","sort","row1","row2","localeCompare","filter","row","toLowerCase","includes","setSelectedSort","type","showModal","mounted","watch"],"sourceRoot":"","sources":["C:\\Users\\Лидия\\Desktop\\Frontend\\fullstack-practice\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <modal-component\n    :show=\"isShowen\"\n    @create=\"addRow\"\n    v-model:show=\"isShowen\"\n  />\n  <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n    <custom-button @click=\"showModal\">Add Row</custom-button>\n    <search-and-sort\n      v-model:searchValue=\"searchTerm\"\n      :modelValue=\"selectedSort\"\n      @update:modelValue=\"setSelectedSort\"\n    />\n  </div>\n  <table-component\n    :rows=\"rows\"\n  /> \n</template>\n\n<script>\n  import axios from 'axios';\n  import TableComponent from './components/TableComponent.vue';\n  import ModalComponent from './components/UI/ModalComponent.vue';\n  import SearchAndSort from './components/UI/SearchAndSort.vue';\n\n  export default {\n    name: 'App',\n    components: {\n      TableComponent,\n      ModalComponent,\n      SearchAndSort\n    },\n    data() {\n      return {\n        rows: [],\n        isShowen: false,\n        selectedSort: '',\n        searchTerm: ''\n      }\n    },\n    methods: {\n      async addRow (title, quantity, distance) {\n        const $host = axios.create({\n            baseURL: process.env.VUE_APP_API_URL\n        })\n        const data = await $host.post('api/table', {title, quantity, distance})\n        return data\n      },\n      async fetchTable() {\n        const $host = axios.create({\n            baseURL: process.env.VUE_APP_API_URL\n        })\n        const {data} = await $host.get('api/table')\n        this.rows = this.sortedAndSearchedTodos(data)\n      },\n      sortTable(rows) {\n        if (this.selectedSort === 'title') {\n          return [...rows].sort((row1, row2) => row1[this.selectedSort].localeCompare(row2[this.selectedSort]))\n        } else if (this.selectedSort) {\n          return [...rows].sort((row1, row2) => row1[this.selectedSort] === row2[this.selectedSort] ? row1['title'].localeCompare(row2['title']) : row1[this.selectedSort] - row2[this.selectedSort])\n        } else {\n          return rows\n        }\n      },\n      sortedAndSearchedTodos(rows) {\n          return this.sortTable(rows).filter(row => row.title.toLowerCase().includes(this.searchTerm.toLowerCase()))\n      },\n      setSelectedSort(type) {\n        this.selectedSort = type\n      },\n      showModal() {\n        this.isShowen = true\n      }\n    },\n    mounted() {\n      this.fetchTable()\n    },\n    watch: {\n      selectedSort() {\n        this.fetchTable()\n      },\n      searchTerm() {\n        this.fetchTable()\n      }\n    }\n}\n</script>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 14px;\n    font-family: 'Poppins', sans-serif;\n  }\n\n  body {\n    padding: 5% 10%;\n    background: #f5f5f5;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}